slice.par <- list(start = 1, end = 31, interval = 1,
aggregate.dur = 1, rule = "any")
render.par <- list(tween.frames = 10, show.time = FALSE)
plot.par <- list(mar = c(0, 0, 0, 0))
compute.animation(nw, slice.par = slice.par, verbose = TRUE)
#
# race <- get.vertex.attribute(nw, "race")
# race.shape <- ifelse(race == 1, 4, 50)
age <- get.vertex.attribute(nw, "age")
age.size <- age/25
render.d3movie(
nw,
render.par = render.par,
plot.par = plot.par,
vertex.cex = age.size,
# vertex.sides = race.shape,
vertex.col = "ndtvcol",
edge.col = "darkgrey",
vertex.border = "lightgrey",
displaylabels = FALSE,
filename = paste0(getwd(), "/movie.html"))
nw <- network.initialize(n = 100, directed = FALSE)
# nw <- set.vertex.attribute(nw, "race", rbinom(100, 1, 0.5))
nw <- set.vertex.attribute(nw, "age", sample(5:100, 100, TRUE))
formation <- ~edges +  absdiff("age") + concurrent + degree1.5
target.stats <- c(200, 30, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
formation <- ~edges +  kstar(3) + absdiff("age") + concurrent
target.stats <- c(200, 30, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
formation <- ~edges +  kstar(3) + absdiff("age") + concurrent
target.stats <- c(200, 10, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
formation <- ~edges +  gwesp + absdiff("age") + concurrent
target.stats <- c(200, 10, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
formation <- ~edges +  gwesp + absdiff("age") + concurrent
# target.stats <- c(200, 10, 20, 2/0)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, coef.form=c(2,1,1,1), coef.diss, verbose = FALSE)
# target.stats <- c(200, 10, 20, 2/0)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, coef.form=c(2,1,1,1), coef.diss, verbose = FALSE)
est <- netest(nw, formation, coef.form=c(2,1,1,1), coef.diss=coef.diss, verbose = FALSE)
formation <- ~edges +  triangle + absdiff("age") + concurrent
target.stats <- c(200, 10, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
formation <- ~edges +  triangle + absdiff("age") + concurrent
target.stats <- c(200, 100, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
formation <- ~edges +  degree(3) + absdiff("age") + concurrent
target.stats <- c(200, 100, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
param <- param.net(inf.prob = 0.5,rec.rate=0.1)
init <- init.net(i.num = 1,r.num=0)
control <- control.net(type = "SIR", nsteps = 31, nsims = 1, verbose = FALSE)
sim <- netsim(est, param, init, control)
nw <- get_network(sim)
nw <- color_tea(nw, verbose = FALSE)
slice.par <- list(start = 1, end = 31, interval = 1,
aggregate.dur = 1, rule = "any")
render.par <- list(tween.frames = 10, show.time = FALSE)
plot.par <- list(mar = c(0, 0, 0, 0))
compute.animation(nw, slice.par = slice.par, verbose = TRUE)
#
# race <- get.vertex.attribute(nw, "race")
# race.shape <- ifelse(race == 1, 4, 50)
age <- get.vertex.attribute(nw, "age")
age.size <- age/25
render.d3movie(
nw,
render.par = render.par,
plot.par = plot.par,
vertex.cex = age.size,
# vertex.sides = race.shape,
vertex.col = "ndtvcol",
edge.col = "darkgrey",
vertex.border = "lightgrey",
displaylabels = FALSE,
filename = paste0(getwd(), "/movie.html"))
nw <- network.initialize(n = 100, directed = FALSE)
# nw <- set.vertex.attribute(nw, "race", rbinom(100, 1, 0.5))
nw <- set.vertex.attribute(nw, "age", sample(5:100, 100, TRUE))
formation <- ~edges +  degree(2) + absdiff("age") + concurrent
target.stats <- c(50, 100, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
param <- param.net(inf.prob = 0.5,rec.rate=0.1)
init <- init.net(i.num = 1,r.num=0)
control <- control.net(type = "SIR", nsteps = 31, nsims = 1, verbose = FALSE)
sim <- netsim(est, param, init, control)
nw <- get_network(sim)
nw <- color_tea(nw, verbose = FALSE)
slice.par <- list(start = 1, end = 31, interval = 1,
aggregate.dur = 1, rule = "any")
render.par <- list(tween.frames = 10, show.time = FALSE)
plot.par <- list(mar = c(0, 0, 0, 0))
compute.animation(nw, slice.par = slice.par, verbose = TRUE)
#
# race <- get.vertex.attribute(nw, "race")
# race.shape <- ifelse(race == 1, 4, 50)
age <- get.vertex.attribute(nw, "age")
age.size <- age/25
render.d3movie(
nw,
render.par = render.par,
plot.par = plot.par,
vertex.cex = age.size,
# vertex.sides = race.shape,
vertex.col = "ndtvcol",
edge.col = "darkgrey",
vertex.border = "lightgrey",
displaylabels = FALSE,
filename = paste0(getwd(), "/movie.html"))
nw <- network.initialize(n = 100, directed = FALSE)
# nw <- set.vertex.attribute(nw, "race", rbinom(100, 1, 0.5))
nw <- set.vertex.attribute(nw, "age", sample(5:100, 100, TRUE))
formation <- ~edges +  degree(2) + absdiff("age") + concurrent
target.stats <- c(50, 20, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
param <- param.net(inf.prob = 0.5,rec.rate=0.1)
init <- init.net(i.num = 1,r.num=0)
control <- control.net(type = "SIR", nsteps = 31, nsims = 1, verbose = FALSE)
sim <- netsim(est, param, init, control)
nw <- get_network(sim)
nw <- color_tea(nw, verbose = FALSE)
slice.par <- list(start = 1, end = 31, interval = 1,
aggregate.dur = 1, rule = "any")
render.par <- list(tween.frames = 10, show.time = FALSE)
plot.par <- list(mar = c(0, 0, 0, 0))
compute.animation(nw, slice.par = slice.par, verbose = TRUE)
#
# race <- get.vertex.attribute(nw, "race")
# race.shape <- ifelse(race == 1, 4, 50)
age <- get.vertex.attribute(nw, "age")
age.size <- age/25
render.d3movie(
nw,
render.par = render.par,
plot.par = plot.par,
vertex.cex = age.size,
# vertex.sides = race.shape,
vertex.col = "ndtvcol",
edge.col = "darkgrey",
vertex.border = "lightgrey",
displaylabels = FALSE,
filename = paste0(getwd(), "/movie.html"))
param <- param.net(inf.prob = seq(1,0,0.01),rec.rate=0.1)
param <- param.net(inf.prob = seq(1,0,by=0.01),rec.rate=0.1)
init <- init.net(i.num = 1,r.num=0)
control <- control.net(type = "SIR", nsteps = 31, nsims = 1, verbose = FALSE)
sim <- netsim(est, param, init, control)
nw <- get_network(sim)
nw <- color_tea(nw, verbose = FALSE)
slice.par <- list(start = 1, end = 31, interval = 1,
aggregate.dur = 1, rule = "any")
render.par <- list(tween.frames = 10, show.time = FALSE)
plot.par <- list(mar = c(0, 0, 0, 0))
compute.animation(nw, slice.par = slice.par, verbose = TRUE)
#
# race <- get.vertex.attribute(nw, "race")
# race.shape <- ifelse(race == 1, 4, 50)
age <- get.vertex.attribute(nw, "age")
age.size <- age/25
render.d3movie(
nw,
render.par = render.par,
plot.par = plot.par,
vertex.cex = age.size,
# vertex.sides = race.shape,
vertex.col = "ndtvcol",
edge.col = "darkgrey",
vertex.border = "lightgrey",
displaylabels = FALSE,
filename = paste0(getwd(), "/movie.html"))
param <- param.net(inf.prob = seq(1,0,by=0.01),rec.rate=0.05)
init <- init.net(i.num = 1,r.num=0)
control <- control.net(type = "SIR", nsteps = 31, nsims = 1, verbose = FALSE)
sim <- netsim(est, param, init, control)
nw <- get_network(sim)
nw <- color_tea(nw, verbose = FALSE)
slice.par <- list(start = 1, end = 31, interval = 1,
aggregate.dur = 1, rule = "any")
render.par <- list(tween.frames = 10, show.time = FALSE)
plot.par <- list(mar = c(0, 0, 0, 0))
compute.animation(nw, slice.par = slice.par, verbose = TRUE)
#
# race <- get.vertex.attribute(nw, "race")
# race.shape <- ifelse(race == 1, 4, 50)
age <- get.vertex.attribute(nw, "age")
age.size <- age/25
render.d3movie(
nw,
render.par = render.par,
plot.par = plot.par,
vertex.cex = age.size,
# vertex.sides = race.shape,
vertex.col = "ndtvcol",
edge.col = "darkgrey",
vertex.border = "lightgrey",
displaylabels = FALSE,
filename = paste0(getwd(), "/movie.html"))
nw <- network.initialize(n = 100, directed = FALSE)
# nw <- set.vertex.attribute(nw, "race", rbinom(100, 1, 0.5))
nw <- set.vertex.attribute(nw, "age", sample(5:100, 100, TRUE))
formation <- ~edges +  degree(2) + absdiff("age") + concurrent
target.stats <- c(50, 20, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
param <- param.net(inf.prob = seq(1,0,by=0.01),rec.rate=0.05)
init <- init.net(i.num = 2,r.num=0)
control <- control.net(type = "SIR", nsteps = 31, nsims = 1, verbose = FALSE)
sim <- netsim(est, param, init, control)
nw <- get_network(sim)
nw <- color_tea(nw, verbose = FALSE)
slice.par <- list(start = 1, end = 31, interval = 1,
aggregate.dur = 1, rule = "any")
render.par <- list(tween.frames = 10, show.time = FALSE)
plot.par <- list(mar = c(0, 0, 0, 0))
compute.animation(nw, slice.par = slice.par, verbose = TRUE)
#
# race <- get.vertex.attribute(nw, "race")
# race.shape <- ifelse(race == 1, 4, 50)
age <- get.vertex.attribute(nw, "age")
age.size <- age/25
render.d3movie(
nw,
render.par = render.par,
plot.par = plot.par,
vertex.cex = age.size,
# vertex.sides = race.shape,
vertex.col = "ndtvcol",
edge.col = "darkgrey",
vertex.border = "lightgrey",
displaylabels = FALSE,
filename = paste0(getwd(), "/movie.html"))
formation <- ~edges +  degree(2) + absdiff("age") + concurrent
target.stats <- c(50, 30, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
param <- param.net(inf.prob = seq(1,0,by=0.01),rec.rate=0.05)
init <- init.net(i.num = 2,r.num=0)
control <- control.net(type = "SIR", nsteps = 31, nsims = 1, verbose = FALSE)
sim <- netsim(est, param, init, control)
nw <- get_network(sim)
nw <- color_tea(nw, verbose = FALSE)
slice.par <- list(start = 1, end = 31, interval = 1,
aggregate.dur = 1, rule = "any")
render.par <- list(tween.frames = 10, show.time = FALSE)
plot.par <- list(mar = c(0, 0, 0, 0))
param <- param.net(inf.prob = seq(1,0,by=-0.01),rec.rate=0.05)
init <- init.net(i.num = 2,r.num=0)
control <- control.net(type = "SIR", nsteps = 31, nsims = 1, verbose = FALSE)
sim <- netsim(est, param, init, control)
nw <- get_network(sim)
nw <- color_tea(nw, verbose = FALSE)
slice.par <- list(start = 1, end = 31, interval = 1,
aggregate.dur = 1, rule = "any")
render.par <- list(tween.frames = 10, show.time = FALSE)
plot.par <- list(mar = c(0, 0, 0, 0))
compute.animation(nw, slice.par = slice.par, verbose = TRUE)
#
# race <- get.vertex.attribute(nw, "race")
# race.shape <- ifelse(race == 1, 4, 50)
age <- get.vertex.attribute(nw, "age")
age.size <- age/25
render.d3movie(
nw,
render.par = render.par,
plot.par = plot.par,
vertex.cex = age.size,
# vertex.sides = race.shape,
vertex.col = "ndtvcol",
edge.col = "darkgrey",
vertex.border = "lightgrey",
displaylabels = FALSE,
filename = paste0(getwd(), "/movie.html"))
install.packages("statnet")
install.packages("EpiModel", dependencies = TRUE)
library(network)
library(ndtv)
library(tergm)
library(EpiModel)
nw <- network.initialize(n = 100, directed = FALSE)
# nw <- set.vertex.attribute(nw, "race", rbinom(100, 1, 0.5))
nw <- set.vertex.attribute(nw, "age", sample(5:100, 100, TRUE))
formation <- ~edges +  degree(2) + absdiff("age") + concurrent
target.stats <- c(200, 30, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
param <- param.net(inf.prob = seq(1,0,by=-0.01),rec.rate=0.05)
init <- init.net(i.num = 2,r.num=0)
control <- control.net(type = "SIR", nsteps = 31, nsims = 1, verbose = FALSE)
sim <- netsim(est, param, init, control)
nw <- get_network(sim)
nw <- color_tea(nw, verbose = FALSE)
slice.par <- list(start = 1, end = 31, interval = 1,
aggregate.dur = 1, rule = "any")
render.par <- list(tween.frames = 10, show.time = FALSE)
plot.par <- list(mar = c(0, 0, 0, 0))
compute.animation(nw, slice.par = slice.par, verbose = TRUE)
#
# race <- get.vertex.attribute(nw, "race")
# race.shape <- ifelse(race == 1, 4, 50)
age <- get.vertex.attribute(nw, "age")
age.size <- age/25
render.d3movie(
nw,
render.par = render.par,
plot.par = plot.par,
vertex.cex = age.size,
# vertex.sides = race.shape,
vertex.col = "ndtvcol",
edge.col = "darkgrey",
vertex.border = "lightgrey",
displaylabels = FALSE,
filename = paste0(getwd(), "/movie.html"))
install.packages("EpiModel", dependencies = TRUE)
render.d3movie(
nw,
render.par = render.par,
plot.par = plot.par,
vertex.cex = age.size,
# vertex.sides = race.shape,
vertex.col = "ndtvcol",
edge.col = "darkgrey",
vertex.border = "lightgrey",
displaylabels = FALSE,
filename = paste0(getwd(), "/movie2.html"))
nw <- network.initialize(n = 100, directed = FALSE)
# nw <- set.vertex.attribute(nw, "race", rbinom(100, 1, 0.5))
nw <- set.vertex.attribute(nw, "age", sample(5:100, 100, TRUE))
formation <- ~edges +  degree(2) + absdiff("age") + concurrent
target.stats <- c(50, 30, 20, 20)
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)
est <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)
param <- param.net(inf.prob = seq(1,0,by=-0.01),rec.rate=0.05)
init <- init.net(i.num = 2,r.num=0)
control <- control.net(type = "SIR", nsteps = 31, nsims = 1, verbose = FALSE)
sim <- netsim(est, param, init, control)
nw <- get_network(sim)
nw <- color_tea(nw, verbose = FALSE)
slice.par <- list(start = 1, end = 31, interval = 1,
aggregate.dur = 1, rule = "any")
render.par <- list(tween.frames = 10, show.time = FALSE)
plot.par <- list(mar = c(0, 0, 0, 0))
compute.animation(nw, slice.par = slice.par, verbose = TRUE)
#
# race <- get.vertex.attribute(nw, "race")
# race.shape <- ifelse(race == 1, 4, 50)
age <- get.vertex.attribute(nw, "age")
age.size <- age/25
render.d3movie(
nw,
render.par = render.par,
plot.par = plot.par,
vertex.cex = age.size,
# vertex.sides = race.shape,
vertex.col = "ndtvcol",
edge.col = "darkgrey",
vertex.border = "lightgrey",
displaylabels = FALSE,
filename = paste0(getwd(), "/movie1.html"))
library(RobStatTM)
methods(summary)
summary.lmrobdetMM*
summary.lmrobdetMM
summary.lmrobdetMM
??summary.lmrobdetMM
summmary.lmrob
lmrobdetMM()
lmrobdetMM
?RobStatTM
output1 = table(c("a","a","b"))
output1
xtable(output1)
library(xtable)
output1 = table(c("a","a","b"))
xtable(output1)
install.packages("kableExtra")
library(knitr)
library(kableExtra)
dt <- mtcars[1:5, 1:4]
kable(dt, format = "latex", booktabs = T, caption = "Demo Table") %>%
kable_styling(latex_options = c("striped", "hold_position"),
full_width = F) %>%
add_header_above(c(" ", "Group 1" = 2, "Group 2[note]" = 2)) %>%
add_footnote(c("table footnote"))
output1 = table(c("a","a","b"))
xtable(output1)
a = xtable(output1)
opts_current$set(label = "test2")
library(xtable)
output1 = table(c("a","a","b"))
x = xtable(output1,
caption = "xtable test")
print(x, caption.placement = "top",include.rownames = T)
install.packages(AER)
install.pacakge("AER")
install.packages("AER")
library(AER)
library(AER)
a = 1
b = 1
ro1 = 0
ro2 = 1
alpha = 0.5
n = 100
k = 10000
bhat1 = numeric(k)
bhat2 = numeric(k)
library(AER)
a = 1
b = 1
ro1 = 0
ro2 = 1
alpha = 0.5
n = 100
k = 10000
bhat1 = numeric(k)
bhat2 = numeric(k)
for (ii in 1:k){
e = rnorm(n)
z = 1+rnorm(n)
x1 = ro1*z +e
x2 = ro2*z +e
y1 = a+ b*x1 + alpha*e +(1-alpha)*rnorm(n)
y2 = a+ b*x2 + alpha*e +(1-alpha)*rnorm(n)
bhat1[ii] = summary(ivreg(y1~x1|z))$coefficients[2,1]
bhat2[ii] = summary(ivreg(y2~x2|z))$coefficients[2,1]
}
mean(bhat1)
mean(bhat2)
library(AER)
a = 1
b = 1
ro1 = 0
ro2 = 1
alpha = 0.5
n = 100
k = 1000
bhat1 = numeric(k)
bhat2 = numeric(k)
for (ii in 1:k){
e = rnorm(n)
z = 1+rnorm(n)
x1 = ro1*z +e
x2 = ro2*z +e
y1 = a+ b*x1 + alpha*e +(1-alpha)*rnorm(n)
y2 = a+ b*x2 + alpha*e +(1-alpha)*rnorm(n)
bhat1[ii] = summary(ivreg(y1~x1|z))$coefficients[2,1]
bhat2[ii] = summary(ivreg(y2~x2|z))$coefficients[2,1]
}
mean(bhat1)
mean(bhat2)
library(AER)
a = 1
b = 1
ro1 = 0
ro2 = 1
alpha = 0.5
n = 100
k = 1000
bhat1 = numeric(k)
bhat2 = numeric(k)
for (ii in 1:k){
e = rnorm(n)
z = 1+rnorm(n)
x1 = 0.1*z +e
x2 = ro2*z +e
y1 = a+ b*x1 + alpha*e +(1-alpha)*rnorm(n)
y2 = a+ b*x2 + alpha*e +(1-alpha)*rnorm(n)
bhat1[ii] = summary(ivreg(y1~x1|z))$coefficients[2,1]
bhat2[ii] = summary(ivreg(y2~x2|z))$coefficients[2,1]
}
mean(bhat1)
mean(bhat2)
library(AER)
a = 1
b = 1
ro1 = 0
ro2 = 1
alpha = 0.5
n = 100
k = 1000
bhat1 = numeric(k)
bhat2 = numeric(k)
for (ii in 1:k){
e = rnorm(n)
z = 1+rnorm(n)
x1 = 0.01*z +e
x2 = ro2*z +e
y1 = a+ b*x1 + alpha*e +(1-alpha)*rnorm(n)
y2 = a+ b*x2 + alpha*e +(1-alpha)*rnorm(n)
bhat1[ii] = summary(ivreg(y1~x1|z))$coefficients[2,1]
bhat2[ii] = summary(ivreg(y2~x2|z))$coefficients[2,1]
}
mean(bhat1)
mean(bhat2)
setwd("C:/Dropbox/Doug/PCRM/R")
library(PCRM)
barplot.wts()
barplot.wts
cbind.na
